<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>思过崖</title>
    <description>人难免天生有自怜的情绪，唯有时刻保持清醒，才能看清真正的价值在哪里。</description>
    <link>https://Chen-WH.github.io/</link>
    <atom:link href="https://Chen-WH.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 04 Feb 2022 12:18:57 +0800</pubDate>
    <lastBuildDate>Fri, 04 Feb 2022 12:18:57 +0800</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>Spectral Clustering</title>
        <description>&lt;h1 id=&quot;graph-partition&quot;&gt;Graph Partition&lt;/h1&gt;

&lt;p&gt;图 $V$ 的 $k$ 划分 $\mathcal{P}={\boldsymbol{V}&lt;em&gt;1,\boldsymbol{V}_2,\dots,\boldsymbol{V}_k}$ 对应的关联矩阵 $\prod=[\pi]&lt;/em&gt;{vj}$ 定义如下
\(\pi_{vj}=
\left\{\begin{array}{ll}
&amp;amp;1 &amp;amp; v\in V_j\\
&amp;amp;0 &amp;amp; v\not\in V_j\\
\end{array}\right.\quad
v\in V\)&lt;/p&gt;

&lt;h2 id=&quot;定义切图&quot;&gt;定义切图&lt;/h2&gt;

\[切图权重W(\boldsymbol{A},\boldsymbol{B})=\sum_{i\in\boldsymbol{A},j\in\boldsymbol{B}}w_{ij}\\
\mathrm{cut}(\boldsymbol{V}_1,\boldsymbol{V}_2,\dots,\boldsymbol{V}_k)=\frac{1}{2}\sum_{i=1}^kW(\boldsymbol{V}_i,\overline{\boldsymbol{V}}_i)\]

&lt;p&gt;为了规避最小切的出现，需要对每个子图的规模做出限定&lt;/p&gt;

&lt;h2 id=&quot;ratiocut&quot;&gt;RatioCut&lt;/h2&gt;

\[\mathrm{RatioCut}(\boldsymbol{V}_1,\boldsymbol{V}_2,\dots,\boldsymbol{V}_k)=\frac{1}{2}\sum_{i=1}^k\frac{W(\boldsymbol{V}_i,\overline{\boldsymbol{V}}_i)}{|\boldsymbol{V}_i|}\]

&lt;p&gt;引入指示向量
\(h_{ij}=\left\{\begin{array}{ll}
&amp;amp;0 &amp;amp; v_i\in V_j\\
&amp;amp;\frac{1}{\sqrt{|\boldsymbol{V}_j|}} &amp;amp; v_i\not\in V_j\\
\end{array}\right.\\
\boldsymbol{h}_i^T\boldsymbol{L}\boldsymbol{h}_i=\frac{1}{2}\sum_{j,k=1}^nw_{jk}(h_{ij}-h_{ik})^2=\frac{W(\boldsymbol{V}_i,\overline{\boldsymbol{V}}_i)}{|\boldsymbol{V}_i|}\\
\mathrm{RatioCut}(\boldsymbol{V}_1,\boldsymbol{V}_2,\dots,\boldsymbol{V}_k)=\frac{1}{2}\sum_{i=1}^k\boldsymbol{h}_i^T\boldsymbol{L}\boldsymbol{h}_i=\frac{1}{2}\sum_{i=1}^k(\boldsymbol{H}^T\boldsymbol{L}\boldsymbol{H})_{ii}\\
=\frac{1}{2}\tr(\boldsymbol{H}^T\boldsymbol{L}\boldsymbol{H})\)
注意到 $\boldsymbol{H}^T\boldsymbol{H}=\boldsymbol{I}$ 故而 $\boldsymbol{h}_i^T\boldsymbol{L}\boldsymbol{h}_i$ 均为 $\boldsymbol{L}$ 的特征值，寻找最小的 $k$ 个特征值后求取对应特征向量即为 $\boldsymbol{H}$&lt;/p&gt;

&lt;p&gt;由于我们在使用维度规约的时候损失了少量信息，导致得到的优化后的指示向量 $\boldsymbol{h}$ 对应的 $\boldsymbol{H}$ 现在不能完全指示各样本的归属，因此一般在得到 $n\times k$ 维度的矩阵 $\boldsymbol{H}$ 后还需要对每一行进行一次传统的聚类，比如使用 K-Means 聚类.&lt;/p&gt;

&lt;h2 id=&quot;ncut&quot;&gt;Ncut&lt;/h2&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;将 $1/\sqrt{&lt;/td&gt;
      &lt;td&gt;\boldsymbol{V}_j&lt;/td&gt;
      &lt;td&gt;}$ 更换为基于权重的 $1/\sqrt{vol(\boldsymbol{V}_j)}$&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;但此时 $\boldsymbol{H}^T\boldsymbol{H}\not=\boldsymbol{I},\boldsymbol{H}^T\boldsymbol{DH}=\boldsymbol{I}$&lt;/p&gt;

&lt;p&gt;构造 $\boldsymbol{H}=\boldsymbol{D}^{-1/2}\boldsymbol{F}$&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;https://www.cnblogs.com/pinard/p/6221564.html&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 03 Feb 2022 00:00:00 +0800</pubDate>
        <link>https://Chen-WH.github.io/2022/02/03/Graph_Partition/</link>
        <guid isPermaLink="true">https://Chen-WH.github.io/2022/02/03/Graph_Partition/</guid>
        
        <category>Swarm</category>
        
        
      </item>
    
      <item>
        <title>Active vision connectivity maintenance</title>
        <description>&lt;h1 id=&quot;主动视觉连通保持&quot;&gt;主动视觉连通保持&lt;/h1&gt;

&lt;h2 id=&quot;集中式&quot;&gt;集中式&lt;/h2&gt;

&lt;h3 id=&quot;权重函数&quot;&gt;权重函数&lt;/h3&gt;

\[w_{ij}=c_1\exp\left[-(\psi_{ij}-\varphi_i)^2/\sigma_1^2\right]+c_2\exp(-\varphi_i^2/\sigma_2^2)+c_3\exp\left[-c_3(|\theta_j-\theta_i|-\frac{\pi}{2})^2/\sigma_3^2\right]\]

&lt;h3 id=&quot;拉普拉斯矩阵&quot;&gt;拉普拉斯矩阵&lt;/h3&gt;

\[\begin{aligned}
    \widetilde{w}_{ij}&amp;amp;=w_{ij}+w_{ji}\\
    &amp;amp;=c_1\exp\left[-(\psi_{ij}-\varphi_i)^2/\sigma_1^2\right]+c_2\exp(-\varphi_i^2/\sigma_2^2)+c_3\exp\left[-c_3(|\theta_j-\theta_i|-\frac{\pi}{2})^2/\sigma_3^2\right]\\
    &amp;amp;+c_1\exp\left[-(\psi_{ji}-\varphi_j)^2/\sigma_1^2\right]+c_2\exp(-\varphi_j^2/\sigma_2^2)+c_3\exp\left[-c_3(|\theta_j-\theta_i|-\frac{\pi}{2})^2/\sigma_3^2\right]\\
\end{aligned}\]

\[\begin{aligned}
L&amp;amp;=\left[\begin{array}{cccc}
\widetilde{w}_{12}+\widetilde{w}_{13}+\widetilde{w}_{14} &amp;amp; -\widetilde{w}_{12} &amp;amp; -\widetilde{w}_{13} &amp;amp; -\widetilde{w}_{14} \\
-\widetilde{w}_{12} &amp;amp; \widetilde{w}_{12}+\widetilde{w}_{23}+\widetilde{w}_{24} &amp;amp; -\widetilde{w}_{23} &amp;amp; -\widetilde{w}_{24} \\
-\widetilde{w}_{13} &amp;amp; -\widetilde{w}_{23} &amp;amp; \widetilde{w}_{13}+\widetilde{w}_{23}+\widetilde{w}_{34} &amp;amp; -\widetilde{w}_{34} \\
-\widetilde{w}_{14} &amp;amp; -\widetilde{w}_{24} &amp;amp; -\widetilde{w}_{34} &amp;amp; \widetilde{w}_{14}+\widetilde{w}_{24}+\widetilde{w}_{34} \\
\end{array}\right]\\
\end{aligned}\]

&lt;h3 id=&quot;控制律&quot;&gt;控制律&lt;/h3&gt;

\[u_i^\theta=\frac{\partial\lambda_2}{\partial \theta_i}\\
u_i^\varphi=\frac{\partial\lambda_2}{\partial \varphi_i}\\\]

&lt;h2 id=&quot;双积分系统&quot;&gt;双积分系统&lt;/h2&gt;

\[u_i=\dot{p}_i=\frac{\partial \lambda_2}{\partial p_i}\\
\dot{u}_i=\ddot{p}_i=\frac{\partial}{\partial t}(\frac{\partial \lambda_2}{\partial p_i})=\frac{\partial}{\partial p_i}(\frac{\partial \lambda_2}{\partial p_i})\cdot\frac{\partial p_i}{\partial t}=\frac{\partial}{\partial p_i}(\frac{\partial \lambda_2}{\partial p_i})u_i=\frac{\partial u_i}{\partial p_i}u_i\\\]

\[u_i^\theta=\frac{\partial \lambda_2}{\partial \theta_i}\\
\dot{u}_i^\theta=\frac{\partial u_i^\theta}{\partial \theta_i}u_i^\theta=\frac{\partial^2\lambda_2}{\partial \theta_i^2}\cdot\frac{\partial \lambda_2}{\partial \theta_i}\\
u_i^\varphi=\frac{\partial \lambda_2}{\partial \varphi_i}\\
\dot{u}_i^\varphi=\frac{\partial u_i^\varphi}{\partial \varphi_i}u_i^\varphi=\frac{\partial^2\lambda_2}{\partial \varphi_i^2}\cdot\frac{\partial \lambda_2}{\partial \varphi_i}\\\]

&lt;h2 id=&quot;分布式&quot;&gt;分布式&lt;/h2&gt;

\[u_i=\frac{\partial\lambda_2}{\partial p_i}=v_2^T\frac{\partial L}{\partial p_i}v_2\]

&lt;h3 id=&quot;幂迭代&quot;&gt;幂迭代&lt;/h3&gt;

\[(1) &amp;amp; \dot{\boldsymbol{x}}=-\mathrm{Ave}(\boldsymbol{x})\boldsymbol{1}\\
(2) &amp;amp; \dot{\boldsymbol{x}}=-\alpha\boldsymbol{Lx}\\
(3) &amp;amp; \dot{\boldsymbol{x}}=-[\mathrm{Ave}(\boldsymbol{x}\odot\boldsymbol{x})-1]\boldsymbol{x}\\\]

&lt;p&gt;第一步使 $\boldsymbol{x}$ 趋向 $\boldsymbol{1}$ 的零空间，第二步使 $\boldsymbol{x}$ 趋向 $\boldsymbol{v}_2$ ，第三步使 $\boldsymbol{x}$ 趋向半径 $\sqrt{n}$ 的球体（这一步可以用除法单位化代替）。&lt;/p&gt;

&lt;p&gt;构造矩阵 $\boldsymbol{B}=\boldsymbol{I}-\alpha\boldsymbol{L}$ 用于迭代，只要 $\alpha$ 足够小，即可保证 $\boldsymbol{B}$ 特征值 $1-\alpha\lambda_1&amp;gt;1-\alpha\lambda_2&amp;gt;\cdots&amp;gt;0$&lt;/p&gt;

&lt;p&gt;已知拉普拉斯矩阵最小特征值为0，对应特征向量为 $\boldsymbol{1}$
\(\boldsymbol{x^T1}=0\\
\left(\sum_{i=1}^n\alpha_i\boldsymbol{v}_i\right)^T\boldsymbol{1}=0\\
\left(\alpha_1\boldsymbol{1}+\sum_{i=2}^n\alpha_i\boldsymbol{v}_i\right)^T\boldsymbol{1}=0\\
\alpha_1\boldsymbol{1}^T\boldsymbol{1}=0\\
\alpha_1=0\\\)
由幂迭代(Power Iteration)可得此时迭代得到特征向量 $\boldsymbol{v}_2$，实际分布式实现中，可以通过一致性得到 $\mathrm{Ave}(\boldsymbol{x}),\mathrm{Ave}(\boldsymbol{x}\odot\boldsymbol{x})$，但需要提高通讯频率，实测通讯频率为控制频率5~10倍时有较好结果。&lt;/p&gt;

</description>
        <pubDate>Sun, 23 Jan 2022 00:00:00 +0800</pubDate>
        <link>https://Chen-WH.github.io/2022/01/23/Active_vision/</link>
        <guid isPermaLink="true">https://Chen-WH.github.io/2022/01/23/Active_vision/</guid>
        
        <category>Swarm</category>
        
        
      </item>
    
      <item>
        <title>Power Iteration</title>
        <description>&lt;h1 id=&quot;power-iteration&quot;&gt;Power Iteration&lt;/h1&gt;

&lt;h2 id=&quot;基本定义&quot;&gt;基本定义&lt;/h2&gt;

&lt;p&gt;对于矩阵 $\boldsymbol{A}$，其特征值为 $\lambda_i$，对应特征向量 $\boldsymbol{v}_i$&lt;/p&gt;

&lt;p&gt;任取 $\boldsymbol{x}_0$ 构造 $\boldsymbol{x}_k=\boldsymbol{A}^k\boldsymbol{x}_0$，前 $r$ 个（一般情况下 $r=1$）为绝对值最大的特征值&lt;/p&gt;

\[\begin{aligned}
|\lambda_1|=|\lambda_2|=\cdots=|\lambda_r|&amp;gt;|\lambda_{r+1}|\geq\cdots\geq|\lambda_n|
\end{aligned}\]

&lt;p&gt;矩阵的特征向量构成一组基&lt;/p&gt;

\[\begin{aligned}
\boldsymbol{x}_0&amp;amp;=\sum_{i=1}^n\alpha_i\boldsymbol{v}_i\\
\boldsymbol{x}_k&amp;amp;=\boldsymbol{A}^k\boldsymbol{x}_0=\sum_{i=1}^n\boldsymbol{A}^k\alpha_i\boldsymbol{v}_i\\
\boldsymbol{x}_k&amp;amp;=\sum_{i=1}^n\alpha_i\lambda_i^k\boldsymbol{v}_i=\lambda_1^k\left[\sum_{i=1}^r\alpha_i\boldsymbol{v}_i+\sum_{i=r+1}^n\left(\frac{\lambda_i}{\lambda_1}\right)^k\alpha_i\boldsymbol{v}_i \right]\\
\lim_{k\to\infty}(\frac{\lambda_i}{\lambda_1})^k&amp;amp;=0(i=r+1,\dots,n)\\
\lim_{k\to\infty}\boldsymbol{x}_k&amp;amp;=\lim_{k\to\infty}\lambda_1^k\left(\sum_{i=1}^r\alpha_i\boldsymbol{v}_i \right)\\
\end{aligned}\]

&lt;p&gt;因为 $\left(\sum_{i=1}^r\alpha_i\boldsymbol{v}_i \right)$ 是固定项&lt;/p&gt;

\[\begin{aligned}
\lim_{k\to\infty}\frac{(\boldsymbol{x}_{k+1})_i}{(\boldsymbol{x}_k)_i}=\lambda_1
\end{aligned}\]

&lt;p&gt;其中收敛速度由比值 $\lvert\lambda_{r+1}/\lambda_1\rvert$ 决定，越小收敛越快。&lt;/p&gt;

&lt;h2 id=&quot;幂法改进&quot;&gt;幂法改进&lt;/h2&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;以上定义中，随着不断的迭代，如果 $&lt;/td&gt;
      &lt;td&gt;\lambda_1&lt;/td&gt;
      &lt;td&gt;&amp;gt;1$ ， $\boldsymbol{x}_k$ 会无限大；如果 $&lt;/td&gt;
      &lt;td&gt;\lambda_1&lt;/td&gt;
      &lt;td&gt;&amp;lt;1$ ， $\boldsymbol{x}_k$ 则会趋于0。如果 $&lt;/td&gt;
      &lt;td&gt;\lambda_{r+1}/\lambda_1&lt;/td&gt;
      &lt;td&gt;$ 很小，使得能快速收敛也无需优化。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;但是通常不会碰到那么好的运气，所以就在每次迭代的时候就要对 $\boldsymbol{x}_k$ 进行单位化，防止它溢出。
\(\begin{aligned}
|\lambda_1|=\lim_{k\to\infty}\frac{||\boldsymbol{x}_{k+1}||}{||\boldsymbol{x}_k||}
\end{aligned}\)
k足够大时，每次迭代各分量正负号不变，则 $\lambda_1$ 为正
\(\begin{aligned}
\boldsymbol{v}_1=\lim_{k\to\infty}\boldsymbol{x}_k=\lim_{k\to\infty}\boldsymbol{A}^k\boldsymbol{x}_0
\end{aligned}\)
可获得一个单位化的主特征值特征向量。因为还乘上了 $\lambda_1^k$ 的符号，所以向量各个分量的符号和迭代的次数 k 有关。$\alpha_1=0$ 则迭代出第二大特征值/对应特征向量&lt;/p&gt;

&lt;h2 id=&quot;迭代加速&quot;&gt;迭代加速&lt;/h2&gt;

\[\begin{aligned}
\boldsymbol{B}=\boldsymbol{A}-p\boldsymbol{I}\\
\end{aligned}\]

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;利用 $\boldsymbol{B}$ 迭代即可得到其特征值 $\lambda_1-p,\lambda_2-p,\dots$ 中绝对值最大者，可以调整迭代比值 $&lt;/td&gt;
      &lt;td&gt;\lambda_{r+1}/\lambda_1&lt;/td&gt;
      &lt;td&gt;$ 及目标特征值/特征向量&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;参考资料&quot;&gt;参考资料&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;https://www.cnblogs.com/qizhou/p/12271287.html&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 21 Jan 2022 00:00:00 +0800</pubDate>
        <link>https://Chen-WH.github.io/2022/01/21/Power_Iteration/</link>
        <guid isPermaLink="true">https://Chen-WH.github.io/2022/01/21/Power_Iteration/</guid>
        
        <category>Math</category>
        
        
      </item>
    
      <item>
        <title>STM32学习笔记</title>
        <description>&lt;h1 id=&quot;stm32&quot;&gt;STM32&lt;/h1&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;安装STM32CubeMX&lt;/li&gt;
  &lt;li&gt;选择生成 makefile / STM32CubeIDE 版本的工程&lt;/li&gt;
  &lt;li&gt;配置 arm-none-eabi-gcc&lt;/li&gt;
  &lt;li&gt;安装 stlink / STM32Programmer&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;boot-configuration&quot;&gt;Boot configuration&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;BOOT 0&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;BOOT 1&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;启动方式&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;x&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;从用户闪存启动，这是正常的工作模式&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;从系统存储器启动，这种模式启动的程序功能由厂家设置&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;从内置SRAM启动，这种模式可以用于调试&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ol&gt;
  &lt;li&gt;用户闪存 = 芯片内置的Flash。&lt;/li&gt;
  &lt;li&gt;SRAM = 芯片内置的RAM区，就是内存。&lt;/li&gt;
  &lt;li&gt;系统存储器 = 芯片内部一块特定的区域，芯片出厂时在这个区域预置了一段Bootloader，就是通常说的ISP程序。这个区域的内容在芯片出厂后没有人能够修改或擦除，即它是一个ROM区。一般来说，我们选用这种启动模式时，是为了从串口下载程序，因为在厂家提供的BootLoader中，提供了串口下载程序的固件，可以通过这个BootLoader将程序下载到系统的Flash中。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;download&quot;&gt;Download&lt;/h2&gt;

&lt;p&gt;ST-Link / STM32CubeProgrammer&lt;/p&gt;

&lt;p&gt;每次烧录后记得重新上电开机才会运行！&lt;/p&gt;

&lt;h2 id=&quot;serial-port&quot;&gt;Serial Port&lt;/h2&gt;

&lt;h3 id=&quot;概念&quot;&gt;概念&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;并行通信：数据各个位同时传输，速度快，占用引脚资源多&lt;/li&gt;
  &lt;li&gt;串行通信：数据按位顺序传输，占用引脚资源少，速度相对较慢
    &lt;ul&gt;
      &lt;li&gt;单工：数据传输只支持数据在一个方向上传输&lt;/li&gt;
      &lt;li&gt;半双工：允许数据在两个方向上传输，但是，在某一时刻，只允许数据在一个方向上传输，它实际上是一种切换方向的单工通信&lt;/li&gt;
      &lt;li&gt;全双工：允许数据同时在两个方向上传输，因此，全双工通信是两个单工通信方式的结合，它要求发送设备和接收设备都有独立的接收和发送能力。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;应用&quot;&gt;应用&lt;/h3&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 发送&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello World !!!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;// Data to send&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;HAL_UART_Transmit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;huart1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Sending in normal mode&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;HAL_Delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                                 &lt;span class=&quot;c1&quot;&gt;// 延时1s&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 接收&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                                  &lt;span class=&quot;c1&quot;&gt;// 注意实际长度中有换行符&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;                          &lt;span class=&quot;c1&quot;&gt;// 用来接收串口发送的数据&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;HAL_UART_Receive_IT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;huart1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;// Enable the USART1 Interrupt&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;HAL_UART_RxCpltCallback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UART_HandleTypeDef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;huart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;HAL_UART_Transmit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;huart1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 接收到数据马上使用串口1发送出去&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;HAL_UART_Receive_IT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;huart1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// 重新使能串口1接收中断&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;https://blog.csdn.net/ouening/article/details/79218971&lt;/p&gt;

&lt;p&gt;PC端与开发板RX/TX分别互换相接&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 串口参数配置&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 设置了ttyUSB0设备的数据流格式为raw，波特率9600，-echo表示不回显输入字符（-号在选项前面表示否定），min 0 表示读取内容时最少读取0个字符， time 10 表示读取执行结果时的超时时间是10/10秒，如果为time 1则此超时时间为1/10秒。不设置读取的超时时间，读取操作不能自动结束。&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;stty&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-F&lt;/span&gt; /dev/ttyUSB0 raw speed 115200 &lt;span class=&quot;nt&quot;&gt;-echo&lt;/span&gt; min 0 &lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;10
&lt;span class=&quot;c&quot;&gt;# 读取串口回显&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /dev/ttyUSB0
&lt;span class=&quot;c&quot;&gt;# 向串口写（输入）命令（数据）&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;数据&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /dev/ttyUSB0
&lt;span class=&quot;c&quot;&gt;# 按十六进制数据进行发送&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;dd&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ff&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /dev/ttymxc0
&lt;span class=&quot;c&quot;&gt;# minicom 参数设置&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;minicom &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;gpio-io&quot;&gt;GPIO I/O&lt;/h2&gt;

&lt;p&gt;IO输出是3.3V,但IO大部分都是可以容忍5V电压输入。一般在芯片手册的“引脚定义”章节可以查看到有FT标识表示该IO可以容忍5V电压输入。&lt;/p&gt;

&lt;h3 id=&quot;配置输入输出&quot;&gt;配置输入输出&lt;/h3&gt;

&lt;p&gt;No pull-up and no pull-down，浮空输入，配置为不上拉和下拉&lt;/p&gt;

&lt;p&gt;Output Open Drain，开漏输出，可以输出低电平    Output Push Pull，推挽输出，可以输出低电平和高电平&lt;/p&gt;

&lt;h3 id=&quot;相关函数&quot;&gt;相关函数&lt;/h3&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 输出&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;HAL_GPIO_WritePin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_SET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 高电平&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;HAL_GPIO_WritePin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_RESET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 低电平&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;HAL_GPIO_WritePin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DONG_OUT_1_Pin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DONG_OUT_2_Pin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_RESET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 两个设置为低电平&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 输入&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;GPIO_PinState&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HAL_GPIO_ReadPin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DONG_IN_1_GPIO_Port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DONG_IN_1_Pin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//读取电平&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PIN_RESET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;HAL_GPIO_WritePin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DONG_OUT_1_Pin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DONG_OUT_2_Pin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_SET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//两个设置为高电平&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;HAL_GPIO_WritePin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DONG_OUT_1_Pin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DONG_OUT_2_Pin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_RESET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//两个设置为低电平&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;关于printf&quot;&gt;关于printf&lt;/h2&gt;

&lt;h3 id=&quot;重定向printf&quot;&gt;重定向printf&lt;/h3&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#ifdef __GNUC__
#define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
#else
#define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
#endif
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;PUTCHAR_PROTOTYPE&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;HAL_UART_Transmit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;huart1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HAL_MAX_DELAY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;使用printf注意\n换行&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;使用float&quot;&gt;使用float&lt;/h3&gt;

&lt;p&gt;Project -&amp;gt; Properties -&amp;gt; C/C++ Build -&amp;gt; settings -&amp;gt; MCU settings -&amp;gt; use float&lt;/p&gt;

&lt;h2 id=&quot;da&quot;&gt;D/A&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;DO 数字信号 0/1 输出&lt;/li&gt;
  &lt;li&gt;AO 模拟信号&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// ADC&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;adc_value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vol&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;HAL_ADC_Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hadc1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;	                &lt;span class=&quot;c1&quot;&gt;//启动ADC单次转换&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;HAL_ADC_PollForConversion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hadc1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;//等待ADC转换完成&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;adc_value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HAL_ADC_GetValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hadc1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 	&lt;span class=&quot;c1&quot;&gt;//读取ADC转换数据&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;vol&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;adc_value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4096&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;//电压转换&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vol&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;65&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;低亮度 电压值vol = %.2fV&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;高亮度 电压值vol = %.2fV&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// DAC&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;HAL_DAC_Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hdac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DAC_CHANNEL_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;HAL_DAC_SetValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hdac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DAC_CHANNEL_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DAC_ALIGN_12B_R&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;HAL_Delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;gpio-引脚枚举&quot;&gt;GPIO 引脚枚举&lt;/h2&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;GPIO_TypeDef&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIOx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;uint16_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_Pin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Pin&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MotorDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PIN_0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PIN_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PIN_4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PIN_6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PIN_3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;HAL_GPIO_WritePin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MotorDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;motor_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MotorDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;motor_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIO_Pin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_SET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;other&quot;&gt;Other&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Device /dev/ttyUSB0 is locked.
&lt;span class=&quot;c&quot;&gt;# 进入/var/lock，删除lockfile&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo rm&lt;/span&gt; /var/lock/LCK..ttyUSB0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Sat, 11 Dec 2021 00:00:00 +0800</pubDate>
        <link>https://Chen-WH.github.io/2021/12/11/STM32/</link>
        <guid isPermaLink="true">https://Chen-WH.github.io/2021/12/11/STM32/</guid>
        
        <category>Note</category>
        
        
      </item>
    
      <item>
        <title>云计算服务模型</title>
        <description>&lt;h1 id=&quot;云计算服务模型&quot;&gt;云计算服务模型&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Chen-WH/PicGo/main/Typora/202111041827565.png&quot; alt=&quot;image-20211029131849645&quot; /&gt;&lt;/p&gt;

&lt;p&gt;MoonJellyDay.jpg&lt;/p&gt;
</description>
        <pubDate>Fri, 29 Oct 2021 00:00:00 +0800</pubDate>
        <link>https://Chen-WH.github.io/2021/10/29/Cloud_computing_model/</link>
        <guid isPermaLink="true">https://Chen-WH.github.io/2021/10/29/Cloud_computing_model/</guid>
        
        <category>Cloud Computing</category>
        
        
      </item>
    
      <item>
        <title>虚拟化技术</title>
        <description>&lt;h1 id=&quot;虚拟化技术&quot;&gt;虚拟化技术&lt;/h1&gt;

&lt;h2 id=&quot;cpu运行级别&quot;&gt;CPU运行级别&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/2/2f/Priv_rings.svg/1200px-Priv_rings.svg.png&quot; alt=&quot;Protection ring - Wikipedia&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Intel的CPU将特权级别分为4个级别：RING0,RING1,RING2,RING3。Windows只使用其中的两个级别RING0和RING3，RING0只给操作系统用，RING3任何程序都能用。应用程序运行在RING3上，不能做受控操作。如果要做，比如要访问磁盘，写文件，那就要通过执行系统调用（函数），执行系统调用的时候，CPU的运行级别会发生从ring3到ring0的切换，并跳转到系统调用对应的内核代码位置执行，这样内核就为你完成了设备访问，完成之后再从ring0返回ring3。这个过程也称作用户态和内核态的切换。&lt;/p&gt;

&lt;p&gt;RING设计的初衷是将系统权限与程序分离出来，使之能够让OS更好的管理当前系统资源，也使得系统更加稳定。举个RING权限的最简单的例子：一个停止响应的应用程式，它运行在比RING0更低的指令环上，你不必大费周章的想着如何使系统回复运作，这期间，只需要启动任务管理器便能轻松终止它，因为它运行在比程式更低的RING0指令环中，拥有更高的权限，可以直接影响到RING0以上运行的程序，当然有利就有弊，RING保证了系统稳定运行的同时，也产生了一些十分麻烦的问题。比如一些OS虚拟化技术，在处理RING指令环时便遇到了麻烦，系统是运行在RING0指令环上的，但是虚拟的OS毕竟也是一个系统，也需要与系统相匹配的权限。而RING0不允许出现多个OS同时运行在上面，最早的解决办法便是使用虚拟机，把OS当成一个程序来运行。&lt;/p&gt;

&lt;h2 id=&quot;虚拟机中快照与克隆的区别&quot;&gt;虚拟机中快照与克隆的区别&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;一个虚拟机的克隆就是原始虚拟机全部数据的一个拷贝，克隆的操作一但完成，克隆的虚拟机就可以脱离原始虚拟机独立存在，而且克隆的虚拟机和原始虚拟机完全独立，不共享任何资源。&lt;/li&gt;
  &lt;li&gt;虚拟机的快照指对某一个特定文件系统在某一个特定时间内的一个具有只读属性的镜像。快照时复制一份原磁盘的索引，指向的实际数据均为原始磁盘的数据，只有当原镜像的的数据发生变化时，才将变化区域的在变化之前的数据复制一份给快照对应位置。&lt;/li&gt;
  &lt;li&gt;快照和克隆都是某一时间点的镜像，区别在于快照只能读，而克隆可以写。快照仅能用于同一虚拟机不同时间点之间跳转，因为它保存的是原始磁盘数据的索引，有些类似git的commit操作；而虚拟机克隆储存了所有数据，可以进行新的部署。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;关于裸金属&quot;&gt;关于裸金属&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Chen-WH/PicGo/main/Typora/202111041855822.png&quot; alt=&quot;image-20211029134118126&quot; /&gt;&lt;/p&gt;

&lt;p&gt;根据 wiki 的解释，裸金属是指可以不经过操作系统干预的情况下，直接在逻辑硬件上执行指令。Bare，正是强调了直面硬件，中间并无遮拦。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;安全方面：裸金属服务器具有安全物理隔离的特性，裸金属服务器与其他租户物理隔离。&lt;/li&gt;
  &lt;li&gt;性能方面：裸金属资源完全独占，完全没有性能损耗，能够胜任高 IO 应用、高性能计算等业务，例如海量数据采集和挖掘，高性能数据库，大型在线游戏等。&lt;/li&gt;
  &lt;li&gt;弹性和自动化：除了裸金属的固有特性，裸金属云完全继承了虚拟化云服务器的 &lt;strong&gt;云&lt;/strong&gt; 特性，例如，快速交付，弹性伸缩等，并且整个过程都是自动化管理。唯一的差距在于相对于虚机和容器的秒级响应，裸金属是分钟级别的响应。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;全虚拟化半虚拟化硬件辅助虚拟化三者之间的区别&quot;&gt;全虚拟化、半虚拟化、硬件辅助虚拟化三者之间的区别。&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;全虚拟化：客户操作系统运行在 Ring 1，在执行特权指令时，会触发异常，然后 VMM 捕获这个异常，在异常里面做翻译，模拟，最后返回到客户操作系统内，客户操作系统认为自己的特权指令工作正常，继续运行。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;半虚拟化：修改操作系统内核，替换掉不能虚拟化的指令，通过超级调用（hypercall）直接和底层的虚拟化层hypervisor来通讯，hypervisor 同时也提供了超级调用接口来满足其他关键内核操作，比如内存管理、中断和时间保持。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;硬件辅助虚拟化：硬件层面直接分配给虚拟机物理设备，这样全虚拟化下，那些靠“捕获异常-翻译-模拟”的实现就不需要了。Intel和AMD的CPU都提供了能使hypervisor存取Ring 0硬件的x86虚拟化指令集。Intel VT-x 和AMD-V都创建了一个新的“Ring -1”，这样客户操作系统就可以本机运行 Ring 0 操作而不影响其他来宾或主机操作系统。为了辅助虚拟化，VT-x 和 SVM 在 Ring 0 下插入了一个新的特权级别。两者都添加了九个新的机器代码指令，这些指令仅适用于“Ring -1”，旨在供虚拟机管理程序使用。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;全虚拟化&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;半虚拟化&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;硬件辅助虚拟化&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;兼容性&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;无需修改客户操作系统，最佳兼容性&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;客户操作系统需要修改来支持hypercall，兼容性差，不支持Windows&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;无需修改客户操作系统，最佳兼容性&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;性能&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;差，因为需要经过异常处理过程&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;好，虚拟机的性能接近于物理机。&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;CPU需要在两种模式之间切换，带来性能开销；但其性能在逐渐逼近半虚拟化。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;[分级保护域&lt;/td&gt;
          &lt;td&gt;维基百科](https://zh.wikipedia.org/wiki/%E5%88%86%E7%BA%A7%E4%BF%9D%E6%8A%A4%E5%9F%9F)&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sat, 16 Oct 2021 00:00:00 +0800</pubDate>
        <link>https://Chen-WH.github.io/2021/10/16/Virtualization_Technology/</link>
        <guid isPermaLink="true">https://Chen-WH.github.io/2021/10/16/Virtualization_Technology/</guid>
        
        <category>Cloud Computing</category>
        
        
      </item>
    
      <item>
        <title>呓语1</title>
        <description>&lt;h1 id=&quot;呓语&quot;&gt;呓语&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;现在好像每个想要努力的人，都需要自己为自己带上枷锁：远离亲朋，远离安逸，投身到撕扯的洪流之中，不够快活，不够快活。同样是安居乐业，同样是英雄辈出，可比之千年前，好像缺了那挥洒肆意的风流。我们这个年纪，正是梦想与现实激烈碰撞的年纪，我们可以突然热泪盈眶，我们也能够瞬间冷静下来。有人问我：“你读研是为了什么？”我说：“读研会让我觉得自己还是个学生，可以骗自己未来还有无限可能。”有人说你一直学习就够了，学历决定一切。可真的是这样吗？我越学习我就越是迷茫，因为我看到我好多学长博士毕业去考公务员了，也有好多学长跨界去做金融了。人永远无法走在时间前面，人也不知道自己做的选择是对是错。有时候我干脆想吧，放弃思考，踏实做好脚下，但我又担心没有思考的努力终将变成南辕北辙，高中时我写作文我最喜欢用的一句话“十年饮冰，难凉热血。”现在就当时好像还没有十年，但我好像也没有那么坚定了。当然啊，以上只是我的胡思乱想，因为千年前的古人 他们也并不是一帆风顺，他们的命途也并不总是春风得意，但他们仍然写下“大鹏一日同风起，扶摇直上九万里。”他们仍然说“竹杖芒鞋轻胜马，谁怕？一蓑烟雨任平生。”他们在自己沉厄顿挫之时仍书写慷慨激昂鼓励后辈，我们又岂能自怨自艾。后人视今，亦犹今之视昔。所以我想，我可能要尽我所能，这世间其实还有很多美好。&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Sat, 16 Oct 2021 00:00:00 +0800</pubDate>
        <link>https://Chen-WH.github.io/2021/10/16/Babble1/</link>
        <guid isPermaLink="true">https://Chen-WH.github.io/2021/10/16/Babble1/</guid>
        
        <category>Article</category>
        
        
      </item>
    
      <item>
        <title>OpenBLAS和LAPACK学习笔记</title>
        <description>&lt;h1 id=&quot;openblaslapack&quot;&gt;OpenBLAS+LAPACK&lt;/h1&gt;

&lt;p&gt;基于OpenBLAS使用LAPACK&lt;/p&gt;

&lt;h2 id=&quot;openblas&quot;&gt;OpenBLAS&lt;/h2&gt;

&lt;h3 id=&quot;下载安装&quot;&gt;下载安装&lt;/h3&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 下载源码&lt;/span&gt;
git clone git@github.com:xianyi/OpenBLAS.git
&lt;span class=&quot;c&quot;&gt;# 编译&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;OpenBLAS
make &lt;span class=&quot;nt&quot;&gt;-j12&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 这里j后面的数字是cpu线程数&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 安装&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;make &lt;span class=&quot;nv&quot;&gt;PREFIX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/opt/OpenBLAS &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 选择安装路径，这里我选择的是/opt/OpenBLAS&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;路径配置&quot;&gt;路径配置&lt;/h3&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 找到上一步中设置的安装路径，可以把以下命令加入.profile文件，或者像我一样写一个sh文件每次使用单独source防止污染&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LD_LIBRARY_PATH&lt;/span&gt;:/opt/OpenBLAS/lib
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;LIBRARY_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LIBRARY_PATH&lt;/span&gt;:/opt/OpenBLAS/lib
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;C_INCLUDE_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$C_INCLUDE_PATH&lt;/span&gt;:/opt/OpenBLAS/include
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CPLUS_INCLUDE_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$CPLUS_INCLUDE_PATH&lt;/span&gt;:/opt/OpenBLAS/include
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;OPENBLAS_NUM_THREADS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1 &lt;span class=&quot;c&quot;&gt;# 指定线程数，建议保持设定为1，最后结论给出原因。&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;测试运行&quot;&gt;测试运行&lt;/h3&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 调用方式与BLAS一样，可以去Netlib上查找&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;cblas.h&amp;gt;
#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;         
    &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;  
    &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; 

    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// row of A and C&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// col of B and C&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// col of A and row of B&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;cblas_dgemm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CblasRowMajor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CblasNoTrans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CblasNoTrans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%lf &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;函数命名为cblas_?????（比如cblas_dgemm）&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 命令行编译&lt;/span&gt;
g++ test.cpp &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-lopenblas&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-cmake highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# cmake生成&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# CMakeLists.txt&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cmake_minimum_required&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;VERSION 3.0.2&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;eigen_mkl&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# set(CMAKE_BUILD_TYPE &quot;Release&quot; )&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# set(CMAKE_BUILD_TYPE &quot;Debug&quot; )&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;CMAKE_CXX_FLAGS &lt;span class=&quot;s2&quot;&gt;&quot;-O3&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# include 头文件&lt;/span&gt;
include_directories
  &lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;catkin_INCLUDE_DIRS&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 链接库目录&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;link_directories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;catkin_LIB_DIRS&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 
&lt;span class=&quot;c1&quot;&gt;## 文件名是eigen_mkl.cpp&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;add_executable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;openblas src/openblas.cpp&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 链接具体的库 libmkl_rt，注意.so是动态库，当然也可以选择静态库，不过文件会大些但更稳定。&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;target_link_libraries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;openblas
-lopenblas
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;lapack&quot;&gt;LAPACK&lt;/h2&gt;

&lt;h3 id=&quot;安装配置&quot;&gt;安装配置&lt;/h3&gt;

&lt;p&gt;在以下两个网页中选择一个打开下载LAPACK源码并解压&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Reference-LAPACK/lapack&quot;&gt;GitHub链接&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.netlib.org/lapack/&quot;&gt;Netlib链接&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 在解压后lapack目录下新建build目录并cmake&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;lapack-3.10.0
&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;build
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;build
cmake ..
&lt;span class=&quot;c&quot;&gt;# cmake后打开并修改CMakeCache.txt文件&lt;/span&gt;
修改　CMAKE_INSTALL_PREFIX:PATH&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;　等号后面为希望lapack安装的目录，如：CMAKE_INSTALL_PREFIX:PATH&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/opt/LAPACK
修改　USE_OPTIMIZED_BLAS:BOOL&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;　等号后面的OFF修改为　ON，如：USE_OPTIMIZED_BLAS:BOOL&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ON
修改　blas_LIB_DEPENDS:STATIC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;　等候后面改为OpenBLAS静态库的绝对地址，如：blas_LIB_DEPENDS:STATIC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/opt/OpenBLAS/liboopenblas.a
&lt;span class=&quot;c&quot;&gt;# 编译安装&lt;/span&gt;
保存CMakeCache.txt文件修改
make &lt;span class=&quot;c&quot;&gt;# 编译&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;make &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 安装&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;路径配置-1&quot;&gt;路径配置&lt;/h3&gt;

&lt;p&gt;安装完后安装路径下只有lib文件夹，需要自己添加include并配置路径，include文件夹在原下载路径下&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Chen-WH/PicGo/main/Typora/202110111155580.png&quot; alt=&quot;image-20211011115438531&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo cp&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; ~/Downloads/lapack-3.10.0/LAPACKE/include /opt/LAPACK/

&lt;span class=&quot;c&quot;&gt;# 添加路径，同上OpenBLAS，这里把两者汇总如下&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LD_LIBRARY_PATH&lt;/span&gt;:/opt/OpenBLAS/lib:/opt/LAPACK/lib
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;LIBRARY_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LIBRARY_PATH&lt;/span&gt;:/opt/OpenBLAS/lib:/opt/LAPACK/lib
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;C_INCLUDE_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$C_INCLUDE_PATH&lt;/span&gt;:/opt/OpenBLAS/include:/opt/LAPACK/include
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CPLUS_INCLUDE_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$CPLUS_INCLUDE_PATH&lt;/span&gt;:/opt/OpenBLAS/include::/opt/LAPACK/include
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;OPENBLAS_NUM_THREADS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;测试运行-1&quot;&gt;测试运行&lt;/h3&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;C&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dgesv_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nrhs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  
           &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ipivot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ldb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;cp&quot;&gt;#define MAX 10
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;// Values needed for dgesv&lt;/span&gt;
   &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nrhs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
   &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
   &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lda&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ldb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ipiv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
   &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;// Other values&lt;/span&gt;
   &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

   &lt;span class=&quot;c1&quot;&gt;// Read the values of the matrix&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Enter n &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;On each line type a row of the matrix A followed by one element of b:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;row &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

   &lt;span class=&quot;c1&quot;&gt;// Solve the linear system&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;dgesv_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nrhs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ipiv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ldb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

   &lt;span class=&quot;c1&quot;&gt;// Check for success&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// Write the answer&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;The answer is&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;b[&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;]&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// Write an error message&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cerr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;dgesv returned error &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 编译选项&lt;/span&gt;
g++ test.cpp &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; test-llapack &lt;span class=&quot;nt&quot;&gt;-lopenblas&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-lgfortran&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-lm&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;实际使用中不需要extern外部引用，加上include后就可以直接调用，函数命名为LAPACK_?????（比如LAPACK_dgesv）&lt;/p&gt;

&lt;h2 id=&quot;性能对比&quot;&gt;性能对比&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;测试项目&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;MKL单线程&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;MKL多线程&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;OpenBLAS+LAPACK单线程&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;OpenBLAS+LAPACK多线程&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;84维小矩阵&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.385ms&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.76ms&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.08386ms&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.80ms&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;可以看到对于小矩阵运算，OpenBLAS性能明显优于MKL，同时多线程也没有收益，大概是数据同步的损失，基本和洪健的说法以及网上的结论一致。本着严谨治学的态度，先mark以下，后续来补全其他情况的测试。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;结论：小矩阵采用OpenBLAS单线程，大矩阵采用MKL多线程。&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 08 Oct 2021 00:00:00 +0800</pubDate>
        <link>https://Chen-WH.github.io/2021/10/08/OpenBLAS_LAPACK/</link>
        <guid isPermaLink="true">https://Chen-WH.github.io/2021/10/08/OpenBLAS_LAPACK/</guid>
        
        <category>Note</category>
        
        
      </item>
    
      <item>
        <title>SSL证书问题及Grub引导问题</title>
        <description>&lt;h1 id=&quot;ssl证书问题及grub引导问题&quot;&gt;SSL证书问题及Grub引导问题&lt;/h1&gt;

&lt;p&gt;最近倒腾电脑遇到的一些窒息错误，在这里记录一下。&lt;/p&gt;

&lt;h2 id=&quot;ssl证书报错&quot;&gt;SSL证书报错&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt update 
&lt;span class=&quot;c&quot;&gt;# Certificate verification failed: The certificate is NOT trusted. The certificate issuer is unknown.  Could not handshake: Error in the certificate verification.&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# onedrive&lt;/span&gt;
SSL报错

最后解决方案，重装ca-certificates
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--reinstall&lt;/span&gt; ca-certificates
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;grub引导问题&quot;&gt;Grub引导问题&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Windows&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;hd1,gpt3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
chainloader /Windows/Boot/EFI/bootmgfw.efi
boot
&lt;span class=&quot;c&quot;&gt;# Ubuntu&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;hd0,gpt2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;hd0,gpt2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/boot/grub
normal
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Mon, 27 Sep 2021 00:00:00 +0800</pubDate>
        <link>https://Chen-WH.github.io/2021/09/27/SSL_Grub/</link>
        <guid isPermaLink="true">https://Chen-WH.github.io/2021/09/27/SSL_Grub/</guid>
        
        
      </item>
    
      <item>
        <title>矩阵求导笔记</title>
        <description>&lt;h1 id=&quot;matrix&quot;&gt;Matrix&lt;/h1&gt;

&lt;p&gt;计算字典 &lt;a href=&quot;./matrixcookbook.pdf&quot;&gt;Matrix Cook Book&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;微分法则&quot;&gt;微分法则&lt;/h2&gt;

\[\begin{aligned}
	&amp;amp;转置&amp;amp; &amp;amp;\mathbf{d}(\boldsymbol{X}^T)=(\mathbf{d}\boldsymbol{X})^T\\
	&amp;amp;迹&amp;amp; &amp;amp;\mathbf{d}\mathrm{tr}(\boldsymbol{X})=\mathrm{tr}(\mathbf{d}\boldsymbol{X})\\
	&amp;amp;求逆&amp;amp; &amp;amp;\mathbf{d}\boldsymbol{X}^{-1}=-\boldsymbol{X}^{-1}\mathbf{d}\boldsymbol{XX}^{-1}(\boldsymbol{XX}^{-1}=\boldsymbol{I}两边微分得到)\\
	&amp;amp;行列式&amp;amp; &amp;amp;\mathbf{d}|\boldsymbol{X}|=\mathrm{tr}(\boldsymbol{X}^*\mathbf{d}\boldsymbol{X})\\
	&amp;amp;主元素函数&amp;amp; &amp;amp;\mathbf{d}\sigma(\boldsymbol{X})=\sigma'(\boldsymbol{X})\odot\mathbf{d}\boldsymbol{X}
\end{aligned}\]

&lt;h2 id=&quot;关于迹&quot;&gt;关于迹&lt;/h2&gt;

\[\begin{aligned}
&amp;amp;矩阵乘法交换，\boldsymbol{A}与\boldsymbol{B}^T尺寸相同&amp;amp; &amp;amp;\mathrm{tr}(\boldsymbol{AB})=\mathrm{tr}(\boldsymbol{BA})\\
&amp;amp;矩阵乘法/逐元素乘法交换，\boldsymbol{A},\boldsymbol{B},\boldsymbol{C}尺寸相同&amp;amp; &amp;amp;\mathrm{tr}(\boldsymbol{A}^T(\boldsymbol{B}\odot\boldsymbol{C}))=\mathrm{tr}((\boldsymbol{A}\odot\boldsymbol{B})^T\boldsymbol{C})
\end{aligned}\]

&lt;p&gt;若标量函数 $f$ 是矩阵 $X$ 经加减乘法、逆、行列式、逐元素函数等运算构成，则使用相应的运算法则对 $f$ 求微分，再使用迹技巧给 $\mathbf{d}f$ 套上迹并将其它项交换至 $\mathbf{d}f$ 左侧，对照导数与微分的联系 $\mathbf{d}f=\mathrm{tr}(\frac{\partial f}{\partial \boldsymbol{X}}^T\mathbf{d}\boldsymbol{X})$，即能得到导数。&lt;/p&gt;

&lt;h2 id=&quot;复合法则&quot;&gt;复合法则&lt;/h2&gt;

\[\begin{aligned}
	\mathbf{d}f&amp;amp;=\mathrm{tr}(\frac{\partial f}{\partial \boldsymbol{Y}}^T\mathbf{d}\boldsymbol{Y})\\
	&amp;amp;=\mathrm{tr}(\frac{\partial f}{\partial \boldsymbol{Y}}^T\boldsymbol{A}\mathbf{d}\boldsymbol{X}\boldsymbol{B})\\
	&amp;amp;=\mathrm{tr}(\boldsymbol{B}\frac{\partial f}{\partial \boldsymbol{Y}}^T\boldsymbol{A}\mathbf{d}\boldsymbol{X})\\
	&amp;amp;=\mathrm{tr}\left((\boldsymbol{A}^T\frac{\partial f}{\partial \boldsymbol{Y}}\boldsymbol{B}^T)^T \mathbf{d}\boldsymbol{X}\right)\\
	得到\frac{\partial f}{\partial \boldsymbol{X}}&amp;amp;=\boldsymbol{A}^T\frac{\partial f}{\partial \boldsymbol{Y}}\boldsymbol{B}^T\\
	注意这里\mathbf{d}\boldsymbol{Y}&amp;amp;=(\mathbf{d}\boldsymbol{A})\boldsymbol{XB}+\boldsymbol{A}(\mathbf{d}\boldsymbol{X})\boldsymbol{B}+\boldsymbol{AX}(\mathbf{d}\boldsymbol{B})=\boldsymbol{A}(\mathbf{d}\boldsymbol{X})\boldsymbol{B}\\
\end{aligned}\]

&lt;h2 id=&quot;矩阵对矩阵&quot;&gt;矩阵对矩阵&lt;/h2&gt;

\[\begin{aligned}
	&amp;amp;向量\boldsymbol{f}(p\times1)对向量\boldsymbol{x}(m\times1)导数&amp;amp; &amp;amp;\frac{\partial \boldsymbol{f}}{\partial \boldsymbol{x}}=
	\left[\begin{array}{cccc}
\frac{\partial f_{1}}{\partial x_{1}} &amp;amp; \frac{\partial f_{2}}{\partial x_{1}} &amp;amp; \cdots &amp;amp; \frac{\partial f_{p}}{\partial x_{1}} \\
\frac{\partial f_{1}}{\partial x_{2}} &amp;amp; \frac{\partial f_{2}}{\partial x_{2}} &amp;amp; \cdots &amp;amp; \frac{\partial f_{p}}{\partial x_{2}} \\
\vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\
\frac{\partial f_{1}}{\partial x_{m}} &amp;amp; \frac{\partial f_{2}}{\partial x_{m}} &amp;amp; \cdots &amp;amp; \frac{\partial f_{p}}{\partial x_{m}}
\end{array}\right](\mathrm{m} \times \mathrm{p})\\
	&amp;amp;矩阵\boldsymbol{F}(p\times q)对矩阵\boldsymbol{X}(m\times n)导数&amp;amp; &amp;amp;向量化（列优先）\\
	&amp;amp;&amp;amp; &amp;amp;\mathbf{vec}(\boldsymbol{X})=[X_{11},\dots,X_{m1},X_{12},\dots,X_{m2},\dots,X_{mn}]^T(mn\times1)\\
	&amp;amp;&amp;amp; &amp;amp;\frac{\partial \boldsymbol{F}}{\partial \boldsymbol{X}}=\frac{\partial \mathbf{vec}(\boldsymbol{F})}{\partial \mathbf{vec}(\boldsymbol{X})}(mn\times pq)\\
\end{aligned}\]

&lt;h2 id=&quot;关于向量化&quot;&gt;关于向量化&lt;/h2&gt;

\[\begin{aligned}
	&amp;amp;矩阵乘法&amp;amp; &amp;amp;\mathbf{vec}(\boldsymbol{AXB})=(\boldsymbol{B}^T\otimes\boldsymbol{A})\mathbf{vec}(\boldsymbol{X})\\
	&amp;amp;\otimes&amp;amp; &amp;amp;Kronecker克罗内克积，\boldsymbol{A}(m\times n)\otimes\boldsymbol{B}(p\times q)=[\boldsymbol{A_{ij}B}](mp\times nq)\\
	&amp;amp;转置&amp;amp; &amp;amp;\mathbf{vec}(\boldsymbol{A}^T)=\boldsymbol{K}_{mn}\mathbf{vec}(\boldsymbol{A})\\
	&amp;amp;\boldsymbol{K}_{mn}(mn\times mn)&amp;amp; &amp;amp;交换矩阵，将m\times n按列优先的向量化变为按行优先的向量化\\
	&amp;amp;逐元素乘法&amp;amp; &amp;amp;\mathbf{vec}(\boldsymbol{A}\odot\boldsymbol{X})=\mathbf{diag}(\boldsymbol{A})\mathbf{vec}(\boldsymbol{X})\\
	&amp;amp;\mathbf{diag}(\boldsymbol{A})(mn\times mn)&amp;amp; &amp;amp;用\boldsymbol{A}的元素按列优先排成的对角阵
\end{aligned}\]

&lt;p&gt;若矩阵函数 $\boldsymbol{F}$ 是矩阵 $\boldsymbol{X}$ 经加减乘法、逆、行列式、逐元素函数等运算构成，则使用相应的运算法则对 $\boldsymbol{F}$ 求微分，再做向量化并使用技巧将其它项交换至 $\mathbf{vec}(\mathbf{d}\boldsymbol{X})$ 左侧，对照导数与微分的联系 $\mathbf{vec}(\mathbf{d}\boldsymbol{F})=\frac{\partial \boldsymbol{F}}{\partial \boldsymbol{X}}^T\mathbf{vec}(\mathbf{d}\boldsymbol{X})$，即能得到导数。&lt;/p&gt;

&lt;h2 id=&quot;一些恒等式&quot;&gt;一些恒等式&lt;/h2&gt;

\[\begin{aligned}
	&amp;amp;1&amp;amp; &amp;amp;(\boldsymbol{A}\otimes\boldsymbol{B})^T=\boldsymbol{A}^T\otimes\boldsymbol{B}^T\\
	&amp;amp;2&amp;amp; &amp;amp;\mathbf{vec}(\boldsymbol{ab}^T)=\boldsymbol{b}\otimes\boldsymbol{a}\\
	&amp;amp;3&amp;amp; &amp;amp;(\boldsymbol{A}\otimes\boldsymbol{B})(\boldsymbol{C}\otimes\boldsymbol{D})=(\boldsymbol{AC})\otimes(\boldsymbol{BD})\\
	&amp;amp;&amp;amp; &amp;amp;\boldsymbol{F}=\boldsymbol{D}^T\boldsymbol{B}^T\boldsymbol{XAC}直接求导和引入\boldsymbol{Y}=\boldsymbol{B}^T\boldsymbol{XA}链式法则分别得到两侧\\
	&amp;amp;4&amp;amp; &amp;amp;\boldsymbol{K}_{mn}=\boldsymbol{K}_{nm}^T,\boldsymbol{K}_{mn}\boldsymbol{K}_{nm}=\boldsymbol{I}\\
	&amp;amp;5&amp;amp; &amp;amp;\boldsymbol{K}_{pm}(\boldsymbol{A}\otimes\boldsymbol{B})\boldsymbol{K}_{nq}=\boldsymbol{B}\otimes\boldsymbol{A},\boldsymbol{A}(m\times n),\boldsymbol{B}(p\times q)\\
	&amp;amp;&amp;amp; &amp;amp;\mathbf{vec}(\boldsymbol{AXB}^T)=(\boldsymbol{B}\otimes\boldsymbol{A})\mathbf{vec}(\boldsymbol{X})\\
	&amp;amp;&amp;amp; &amp;amp;\mathbf{vec}(\boldsymbol{AXB}^T)=\boldsymbol{K}_{pm}\mathbf{vec}(\boldsymbol{BX}^T\boldsymbol{A}^T)=\boldsymbol{K}_{pm}(\boldsymbol{A}\otimes\boldsymbol{B})\mathbf{vec}(\boldsymbol{X}^T)=\boldsymbol{K}_{pm}(\boldsymbol{A}\otimes\boldsymbol{B})\boldsymbol{K}_{nq}\mathbf{vec}(\boldsymbol{X})\\
\end{aligned}\]

</description>
        <pubDate>Thu, 09 Sep 2021 00:00:00 +0800</pubDate>
        <link>https://Chen-WH.github.io/2021/09/09/Matrix/</link>
        <guid isPermaLink="true">https://Chen-WH.github.io/2021/09/09/Matrix/</guid>
        
        <category>Math</category>
        
        
      </item>
    
  </channel>
</rss>
